version: 2 # use CircleCI 2.0
jobs: # basic units of work in a run
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: circleci/golang:1.12 #
    # directory where steps are run. Path must conform to the Go Workspace requirements
    working_directory: /go/src/github.com/swishlabsco/cosmos-ethereum-bridge

    environment: # environment variables for the build itself
      TEST_RESULTS: /tmp/test-results # path to where test results will be saved

    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - run: mkdir -p $TEST_RESULTS # create the test results directory

      - restore_cache: # restores saved cache if no changes are detected since last run
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          keys:
            - v1-pkg-cache

      - run: make get_tools
      - run: dep ensure -v
      - run: go get -u github.com/kardianos/govendor
      - run: govendor fetch -tree github.com/ethereum/go-ethereum/crypto/secp256k1
      - run: make install
      - run:
          name: Run tests
          # Store the results of our tests in the $TEST_RESULTS directory
          command: |
            gotestsum --junitfile ${TEST_RESULTS}/unit-tests.xml
      - store_test_results:
          path: /tmp/test-results
  contracts:
    # The primary container is an instance of the first image listed. The job's commands run in this container.
    docker:
      # specify the version you desire here
      - image: circleci/node:9.11.1

    working_directory: /go/src/github.com/swishlabsco/cosmos-ethereum-bridge/ethereum-contracts
    
    environment: # environment variables for the build itself
      TEST_RESULTS: /tmp/contract-test-results # path to where test results will be saved
   
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: truffle develop # start server
      - run: test # triggers truffle test
      - store_test_results:
          path: /tmp/contract-test-results
      - run: exit

